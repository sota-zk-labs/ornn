{% macro composition_constraint(a, b, c) %}

            {
                // Read the next element.
                let column_value = mod_mul(*borrow(ctx, composition_query_responses), k_montgomery_r_inv, prime);
                // res += c_192*(h_0(x) - C_0(z^2)) / (x - z^2).
                res = add(
                    res,
                    mod_mul(mod_mul(/*(x - z^2)^(-1)*/ *borrow(&batch_inverse_array, denominators_ptr + {{a}}),
                        oods_alpha_pow,
                        prime),
                        add(column_value, sub(prime, /*composition_oods_values[0]*/ *borrow(ctx, {{b}} + {{c}}))),
                        prime)
                );
                oods_alpha_pow = mod_mul(oods_alpha_pow, oods_alpha, prime);
            };

{% endmacro composition_constraint %}